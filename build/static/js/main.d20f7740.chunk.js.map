{"version":3,"sources":["helper.js","../node_modules/truffle-contract/node_modules/web3-eth-accounts/src sync","../node_modules/truffle-interface-adapter/node_modules/web3-eth-accounts/src sync","App.js","infoModal.js","library.js","homepage.js","pdf.js","Alpha.js","index.js","modal.js","../node_modules/pdfjs-dist/build sync","utils/getWeb3.js","ipfsHelper.js","payment.js","ipfs.js","addBookModal.js"],"names":["web3Obj","web3","Web3","torus","setweb3","provider","web3Inst","initialize","buildEnv","a","Torus","init","network","host","login","sessionStorage","setItem","webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","tokenAbi","require","App","state","account","balance","selectedVerifier","placeholder","verifierId","setStateInfo","eth","getAccounts","then","accounts","setState","getBalance","enableTorus","preventDefault","console","error","changeProvider","setProvider","getUserInfo","userInfo","logout","cleanUp","signMessage","currentProvider","send","method","params","from","err","result","signTypedData_v1","type","name","value","signTypedData_v3","JSON","stringify","types","EIP712Domain","Person","Mail","primaryType","domain","version","chainId","verifyingContract","message","wallet","to","contents","text","document","querySelector","innerHTML","signTypedData_v4","Group","wallets","sendEth","sendTransaction","utils","toWei","sendDai","finally","localWeb3","instance","Contract","Math","floor","parseFloat","toString","methods","transfer","createPaymentTx","initiateTopup","selectedCurrency","fiatValue","selectedCryptoCurrency","catch","getPublicAddress","verifier","isExtended","onSelectedVerifierChanged","event","target","isTorus","getItem","this","className","onSubmit","onChange","onClick","style","marginTop","defaultValue","marginLeft","disabled","React","Component","Example","props","useState","show","setShow","Button","variant","Modal","onHide","Header","closeButton","Title","data","Body","email","address","Footer","log","userAbi","User","abi","userContractAddress","networks","userInstance","get","call","library","userInitialization","Container","Row","api","map","item","Col","Card","width","Img","src","image","By","Text","Homepage","r","bind","UserList","axios","res","home","exact","path","component","pdf","onDocumentLoadSuccess","numPages","goToPrevPage","pageNumber","goToNextPage","pdfjs","GlobalWorkerOptions","workerSrc","file","onLoadSuccess","NoMatch","Alpha","ipfs","homepage","ReactDOM","render","getElementById","handleClose","price","bookId","Payment","getAuthorAddress","getWeb3","Promise","reject","window","addEventListener","results","providers","HttpProvider","port","protocol","payment","bookid","chainBooksInitialization","chainBookInstance","getAuthor","makePayment","toFixed","shareIpfs","getIpfs","saveIpfsToUser","set","toaccount","receipt","alert","getStatus","getTransactionReceipt","Initialize","chainBooksAbi","Chainbooks","chainBooksContractAddress","Ipfs","ipfsHash","buffer","captureFile","UsergetContract","UserContract","simpleStorage","contract","SimpleStorageContract","deployed","simpleStorageInstance","contractAddress","files","reader","FileReader","readAsArrayBuffer","onloadend","Buffer","ipfsHelper","add","hash","href","alt","secondShow","setSecondShow","handleYes","handleSecondClose","setBuffer","setChainBookInstance","setGeneratedHash","setBookId","getBookId","showLoading"],"mappings":"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","file":"static/js/main.d20f7740.chunk.js","sourcesContent":["import Web3 from 'web3'\nimport Torus from '@toruslabs/torus-embed'\n\nconst web3Obj = {\n  web3: new Web3(),\n  torus: {},\n  setweb3: function(provider) {\n    const web3Inst = new Web3(provider)\n    web3Obj.web3 = web3Inst\n  },\n  initialize: async function(buildEnv) {\n    const torus = new Torus()\n    await torus.init({ buildEnv: buildEnv || 'production', network: { host: 'ropsten' } })\n    await torus.login()\n    web3Obj.setweb3(torus.provider)\n    web3Obj.torus = torus\n    sessionStorage.setItem('pageUsingTorus', buildEnv)\n  }\n}\nexport default web3Obj\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 1691;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 1737;","import React from 'react'\nimport web3Obj from './helper'\n\nconst tokenAbi = require('human-standard-token-abi')\n\nclass App extends React.Component {\n  state = {\n    account: null,\n    balance: '',\n    selectedVerifier: 'google',\n    placeholder: 'Enter google email',\n    verifierId: null,\n    buildEnv: 'development'\n  }\n\n  componentDidMount() {\n    const isTorus = sessionStorage.getItem('pageUsingTorus')\n    if (isTorus) {\n      web3Obj.initialize(isTorus).then(() => {\n        this.setStateInfo()\n      })\n    }\n  }\n\n  setStateInfo = () => {\n    web3Obj.web3.eth.getAccounts().then(accounts => {\n      this.setState({ account: accounts[0] })\n      web3Obj.web3.eth.getBalance(accounts[0]).then(balance => {\n        this.setState({ balance: balance })\n      })\n    })\n  }\n\n  enableTorus = async e => {\n    const { buildEnv } = this.state\n    e.preventDefault()\n    try {\n      await web3Obj.initialize(buildEnv)\n      this.setStateInfo()\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  changeProvider = async () => {\n    await web3Obj.torus.setProvider({ host: 'ropsten' })\n    this.console('finished changing provider')\n  }\n\n  getUserInfo = async () => {\n    const userInfo = await web3Obj.torus.getUserInfo()\n    this.console(userInfo)\n  }\n\n  logout = () => {\n    web3Obj.torus.cleanUp().then(() => {\n      this.setState({ account: '', balance: 0 })\n      sessionStorage.setItem('pageUsingTorus', false)\n    })\n  }\n\n  signMessage = () => {\n    // hex message\n    const message = '0x47173285a8d7341e5e972fc677286384f802f8ef42a5ec5f03bbfa254cb01fad'\n    web3Obj.torus.web3.currentProvider.send(\n      {\n        method: 'eth_sign',\n        params: [this.state.account, message],\n        from: this.state.account\n      },\n      (err, result) => {\n        if (err) {\n          return console.error(err)\n        }\n        this.console('sign message => true \\n', result)\n      }\n    )\n  }\n\n  signTypedData_v1 = () => {\n    const typedData = [\n      {\n        type: 'string',\n        name: 'message',\n        value: 'Hi, Alice!'\n      },\n      {\n        type: 'uint8',\n        name: 'value',\n        value: 10\n      }\n    ]\n    web3Obj.torus.web3.currentProvider.send(\n      {\n        method: 'eth_signTypedData',\n        params: [typedData, this.state.account],\n        from: this.state.account\n      },\n      (err, result) => {\n        if (err) {\n          return console.error(err)\n        }\n        this.console('sign typed message v1 => true \\n', result)\n      }\n    )\n  }\n\n  signTypedData_v3 = () => {\n    const typedData = {\n      types: {\n        EIP712Domain: [\n          { name: 'name', type: 'string' },\n          { name: 'version', type: 'string' },\n          { name: 'chainId', type: 'uint256' },\n          { name: 'verifyingContract', type: 'address' }\n        ],\n        Person: [\n          { name: 'name', type: 'string' },\n          { name: 'wallet', type: 'address' }\n        ],\n        Mail: [\n          { name: 'from', type: 'Person' },\n          { name: 'to', type: 'Person' },\n          { name: 'contents', type: 'string' }\n        ]\n      },\n      primaryType: 'Mail',\n      domain: {\n        name: 'Ether Mail',\n        version: '1',\n        chainId: 4,\n        verifyingContract: '0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC'\n      },\n      message: {\n        from: {\n          name: 'Cow',\n          wallet: '0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826'\n        },\n        to: {\n          name: 'Bob',\n          wallet: '0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB'\n        },\n        contents: 'Hello, Bob!'\n      }\n    }\n    web3Obj.torus.web3.currentProvider.send(\n      {\n        method: 'eth_signTypedData_v3',\n        params: [this.state.account, JSON.stringify(typedData)],\n        from: this.state.account\n      },\n      (err, result) => {\n        if (err) {\n          return console.error(err)\n        }\n        this.console('sign typed message v3 => true \\n', result)\n      }\n    )\n  }\n\n  console = text => {\n    document.querySelector('#console>p').innerHTML = typeof text === 'object' ? JSON.stringify(text) : text\n  }\n\n  signTypedData_v4 = () => {\n    const typedData = {\n      types: {\n        EIP712Domain: [\n          { name: 'name', type: 'string' },\n          { name: 'version', type: 'string' },\n          { name: 'chainId', type: 'uint256' },\n          { name: 'verifyingContract', type: 'address' }\n        ],\n        Person: [\n          { name: 'name', type: 'string' },\n          { name: 'wallets', type: 'address[]' }\n        ],\n        Mail: [\n          { name: 'from', type: 'Person' },\n          { name: 'to', type: 'Person[]' },\n          { name: 'contents', type: 'string' }\n        ],\n        Group: [\n          { name: 'name', type: 'string' },\n          { name: 'members', type: 'Person[]' }\n        ]\n      },\n      domain: {\n        name: 'Ether Mail',\n        version: '1',\n        chainId: 4,\n        verifyingContract: '0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC'\n      },\n      primaryType: 'Mail',\n      message: {\n        from: {\n          name: 'Cow',\n          wallets: ['0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826', '0xDeaDbeefdEAdbeefdEadbEEFdeadbeEFdEaDbeeF']\n        },\n        to: [\n          {\n            name: 'Bob',\n            wallets: [\n              '0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB',\n              '0xB0BdaBea57B0BDABeA57b0bdABEA57b0BDabEa57',\n              '0xB0B0b0b0b0b0B000000000000000000000000000'\n            ]\n          }\n        ],\n        contents: 'Hello, Bob!'\n      }\n    }\n    web3Obj.torus.web3.currentProvider.send(\n      {\n        method: 'eth_signTypedData_v4',\n        params: [this.state.account, JSON.stringify(typedData)],\n        from: this.state.account\n      },\n      (err, result) => {\n        if (err) {\n          return console.error(err)\n        }\n        this.console('sign typed message v4 => true \\n', result)\n      }\n    )\n  }\n\n  sendEth = () => {\n    const { account } = this.state\n    web3Obj.web3.eth.sendTransaction({ from: account, to: '0xadD2292217dA6B0D93c3b204De770842bDF77198', value: web3Obj.web3.utils.toWei('0.01') })\n  }\n\n  sendDai = () => {\n    web3Obj.torus.setProvider({ host: 'mainnet' }).finally(async () => {\n      const localWeb3 = web3Obj.web3\n      const instance = new localWeb3.eth.Contract(tokenAbi, '0x6b175474e89094c44da98b954eedeac495271d0f')\n      const value = Math.floor(parseFloat(0.01) * 10 ** parseFloat(18)).toString()\n      const result = await instance.methods.transfer(this.state.account, value).send({\n        from: this.state.account\n      })\n      this.console(result)\n    })\n  }\n\n  createPaymentTx = () => {\n    web3Obj.torus\n      .initiateTopup('wyre', {\n        selectedCurrency: 'USD',\n        fiatValue: '250',\n        selectedCryptoCurrency: 'ETH'\n      })\n      .catch(err => this.console(err.message))\n  }\n\n  getPublicAddress = () => {\n    web3Obj.torus.getPublicAddress({ verifier: this.state.selectedVerifier, verifierId: this.state.verifierId, isExtended: true }).then(this.console)\n  }\n\n  onSelectedVerifierChanged = event => {\n    let placeholder = 'Enter google email'\n    switch (event.target.value) {\n      case 'google':\n        placeholder = 'Enter google email'\n        break\n      case 'reddit':\n        placeholder = 'Enter reddit username'\n        break\n      case 'discord':\n        placeholder = 'Enter discord ID'\n        break\n      default:\n        placeholder = 'Enter google email'\n        break\n    }\n    this.setState({\n      selectedVerifier: event.target.value,\n      placeholder\n    })\n  }\n\n  render() {\n    let { account, buildEnv, selectedVerifier, verifierId, placeholder, balance } = this.state\n    return (\n      <div className=\"App\">\n        {!account && (\n          <form onSubmit={this.enableTorus}>\n            <p>Build Environment</p>\n            <select name=\"buildEnv\" value={buildEnv} onChange={e => this.setState({ buildEnv: e.target.value })}>\n              <option value=\"production\">Production</option>\n              <option value=\"staging\">Staging</option>\n              <option value=\"testing\">Testing</option>\n              <option value=\"development\">Development</option>\n            </select>\n            <button>Login</button>\n          </form>\n        )}\n        {account && (\n          <div>\n            <div>Account: {account}</div>\n            <div>Balance: {balance}</div>\n            <button onClick={this.getUserInfo}>Get User Info</button>\n            <button onClick={this.createPaymentTx}>Create Payment Tx</button>\n            <button onClick={this.sendEth}>Send Eth</button>\n            <button onClick={this.logout}>Logout</button>\n            <br />\n            <button onClick={this.signMessage}>sign_eth</button>\n            <button onClick={this.signTypedData_v1}>sign typed data v1</button>\n            <button onClick={this.signTypedData_v3}>sign typed data v3</button>\n            <button onClick={this.signTypedData_v4}>sign typed data v4</button>\n            <button onClick={this.changeProvider}>Change Provider</button>\n            <button onClick={this.sendDai}>Send DAI</button>\n            <div style={{ marginTop: '20px' }}>\n              <select name=\"verifier\" onChange={this.onSelectedVerifierChanged} value={selectedVerifier}>\n                <option defaultValue value=\"google\">\n                  Google\n                </option>\n                <option value=\"reddit\">Reddit</option>\n                <option value=\"discord\">Discord</option>\n              </select>\n              <input\n                type=\"email\"\n                style={{ marginLeft: '20px' }}\n                onChange={e => this.setState({ verifierId: e.target.value })}\n                placeholder={placeholder}\n              />\n            </div>\n            <button disabled={!verifierId} style={{ marginTop: '20px' }} onClick={this.getPublicAddress}>\n              Get Public Address\n            </button>\n          </div>\n        )}\n        <div id=\"console\">\n          <p></p>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App\n","import Modal from 'react-bootstrap/Modal';\r\nimport React, {useState} from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport './buttonFix.css';\r\n\r\n\r\nfunction Example(props) {\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => {\r\n        setShow(false);\r\n    }\r\n\r\n    \r\n    const handleYes = () => {\r\n        setShow(false);\r\n    } \r\n\r\n    const handleShow = () => {\r\n        setShow(true)\r\n    };\r\n\r\n\r\n  \r\n    return (\r\n      <>\r\n        <Button className=\"button\" variant=\"info\"  onClick={handleShow}>\r\n        Info\r\n        </Button>\r\n        {/* {props.data.name} */}\r\n        <Modal show={show} onHide={handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title> {props.data.name} </Modal.Title>\r\n          </Modal.Header>\r\n            <Modal.Body> \r\n\r\n                Email : {props.data.email}  <br/>\r\n                Varifier : {props.data.verifier} <br/>\r\n                Address : {props.data.address} <br/>\r\n\r\n            </Modal.Body>\r\n          <Modal.Footer>\r\n            {/* <Button className=\"button\" variant=\"secondary\" onClick={handleClose}>\r\n              Cancel\r\n            </Button> */}\r\n            <Button className=\"button\"  variant=\"primary\" onClick={handleYes}>\r\n              OK!\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n        </>\r\n    );\r\n  }\r\n  \r\n  export default Example;","\r\nimport React from 'react';\r\nimport api from './randomData.json';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Modal from './modal';\r\nimport Card from 'react-bootstrap/Card';\r\nimport './buttonFix.css';\r\nimport User from './contracts/User.json';\r\nimport web3Obj from './helper'\r\n\r\n\r\nasync function userInitialization() {\r\n    console.log(\"Inside userInitialization!\");\r\n    const userAbi = User.abi;\r\n    const userContractAddress = User.networks[3].address;\r\n    const userInstance = new web3Obj.web3.eth.Contract(userAbi, userContractAddress);\r\n    await web3Obj.web3.eth.getAccounts().then(async (accounts) => {\r\n        await userInstance.methods.get().call({ from: accounts[0] })\r\n            .then((result) => {\r\n                console.log(\"IPFS has been received from User!\");\r\n                console.log(result);\r\n            })\r\n        })\r\n}\r\n\r\nfunction library() {\r\n    userInitialization();\r\n    return (\r\n        <Container >\r\n            <Row className=\"border border-dark\">\r\n                {\r\n                    api.map((item) => {\r\n                        return <Col>\r\n                            <Card style={{ width: '18rem' }}>\r\n                                <Card.Img variant=\"top\" src={item.image} />\r\n                                <Card.Body>\r\n                                    <Card.Title>{item.By}</Card.Title>\r\n                                    <Card.Text>\r\n                                        library quick example text to build on the card title and make up the bulk of\r\n                                        the card's content.\r\n                                            </Card.Text>\r\n                                    {/*  <Button className=\"button\" variant=\"primary\">Buy for {item.price} </Button> */}\r\n                                    <Modal data={item} />\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                    })\r\n                }\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default library;","\nimport React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Card from 'react-bootstrap/Card';\nimport './buttonFix.css';\nimport Modal from './modal';\nimport InfoModal from './infoModal';\nimport web3Obj from './helper'\nimport api from './randomData.json';\nimport axios from \"axios\";\nimport { BrowserRouter as Router, Route, Link, Switch, Redirect } from 'react-router-dom';\nimport library from './library';\nimport AddBookModal from './addBookModal';\n\nclass Homepage extends React.Component {\n    constructor() {\n        super()\n        // this.secondaryFun = this.secondaryFun.bind(this);\n        console.log(api);\n        this.getUserInfo = this.getUserInfo.bind(this);\n    }\n\n    componentDidMount() {\n        this.UserList();\n        // this.getUserInfo();\n    }\n\n    UserList() {\n        axios.get(\"http://localhost:4000/\").then(res => {\n            console.log(res.data);\n        });\n    }\n\n    getUserInfo = async () => {\n        this.data = {};\n        console.log(\"Inside getInfo!\");\n        await web3Obj.torus.getUserInfo()\n            .then(async (r) => {\n                console.log(\"Inside Success of getInfo!\");\n                this.data.name = r.name;\n                this.data.email = r.email;\n                this.data.verifier = r.verifier;\n                await web3Obj.web3.eth.getAccounts().then(async (accounts) => {\n                    this.data.address = accounts[0];\n                })\n                console.log(this.data);\n            })\n    }\n\n    logout = () => {\n        web3Obj.torus.cleanUp().then(() => {\n            this.setState({ account: '', balance: 0 })\n            sessionStorage.setItem('pageUsingTorus', false)\n        })\n    }\n\n    home() {\n        return (\n            <Container >\n                <Row className=\"border border-dark\">\n                    {\n                        api.map((item) => {\n                            return <Col>\n                                <Card style={{ width: '18rem' }}>\n                                    <Card.Img variant=\"top\" src={item.image} />\n                                    <Card.Body>\n                                        <Card.Title>{item.By}</Card.Title>\n                                        <Card.Text>\n                                            Some quick example text to build on the card title and make up the bulk of\n                                            the card's content.\n                                            </Card.Text>\n                                        {/*  <Button className=\"button\" variant=\"primary\">Buy for {item.price} </Button> */}\n                                        <Modal data={item} />\n                                    </Card.Body>\n                                </Card>\n                            </Col>\n                        })\n                    }\n                </Row>\n            </Container>\n        )\n    }\n\n    render() {\n        this.getUserInfo();\n        return (\n            <div>\n                <Router>\n                    <Container >\n\n                        <Row className=\"border border-dark\">\n                            {/* <Col><Button onClick={this.getUserInfo} variant=\"info\" className=\"button align-top\">Info</Button>{' '}</Col> */}\n                            <Col><InfoModal data={this.data} /></Col>\n                            <Col>\n                            {/* <Form inline>\n                                <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n                                <Button className=\"button\" variant=\"outline-success\">Search</Button>\n                            </Form> */}\n                            {/* <Button onClick={''} className=\"button\" variant=\"info\">Add Book</Button> */}\n                            <AddBookModal />\n                            </Col>\n                            <Redirect to='/' />\n                            <Link to='/'><Col><Button onClick={this.home} className=\"button\" variant=\"success\">Home</Button>{''}</Col></Link>\n                            <Link to='/library'><Col><Button onClick={this.library} className=\"button\" variant=\"success\">Library</Button>{''}</Col></Link>\n                            <Col><Button onClick={this.logout} className=\"button\" variant=\"info\">Logout</Button>{' '}</Col>\n                        </Row>\n\n                    </Container>\n                    {/* <button onClick={this.UserList}>fetch</button> */}\n\n                    <Switch>\n                        <Route exact path='/' component={this.home} />\n                        <Route path='/library' component={library} />\n                    </Switch>\n                </Router>\n            </div>\n        );\n    }\n}\n\nexport default Homepage;\n","import React, { Component } from 'react';\nimport { Document, Page, pdfjs } from 'react-pdf';\n\nclass pdf extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { numPages: null, pageNumber: 1 };\n    pdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n  }\n\n  onDocumentLoadSuccess = ({ numPages }) => {\n    this.setState({ numPages });\n  };\n\n  goToPrevPage = () => this.setState((state) => ({ pageNumber: state.pageNumber - 1 }));\n\n  goToNextPage = () => this.setState((state) => ({ pageNumber: state.pageNumber + 1 }));\n\n  render() {\n    const { pageNumber, numPages } = this.state;\n\n    return (\n      <div>\n        <nav>\n          <button onClick={this.goToPrevPage}>Prev</button>\n          <button onClick={this.goToNextPage}>Next</button>\n        </nav>\n\n        <div style={{ width: 600 }}>\n          <Document\n            file=\"https://ipfs.io/ipfs/QmaTyn7RxTjo2Z7Kf6CCnHE4MZKndfvZ8vu1qCG3t7roNK\"\n            onLoadSuccess={this.onDocumentLoadSuccess}\n          >\n            <Page pageNumber={pageNumber} width={600} />\n          </Document>\n        </div>\n\n        <p>\n          Page\n          {pageNumber}\n          of\n          {numPages}\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default pdf;","import App from './App';\nimport ipfs from './ipfs';\nimport homepage from './homepage';\nimport pdf from './pdf';\nimport React from 'react';\nimport {BrowserRouter as Router, Route, Link, Switch, Redirect} from 'react-router-dom';\n \nfunction Alpha(){\n   return (\n       <div>\n           <Router>\n               <div>\n                   \n                   <ul>\n                      <li><Link to='/'>App</Link></li>\n                       <li><Link to='/ipfs'>ipfs</Link></li>\n                       <li><Link to='/homepage'>homepage</Link></li>\n                       <li><Link to='/pdf'>pdf</Link></li>\n                   </ul>\n                   <Switch>\n                   <Route exact path='/'  component={App} />\n                   <Route  path='/ipfs'  component={ipfs} />\n                   <Route  path='/homepage'  component={homepage} />\n                   <Route  path='/pdf'  component={pdf} />\n                   <Route component={NoMatch}/>\n                   </Switch>\n               </div>\n          \n            </Router>\n       </div>\n   )\n}\nfunction NoMatch(){\n   return(\n       <div>\n           NoMatch\n       </div>\n   )\n}\n \nexport default Alpha;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport Alpha from './Alpha'\n\nReactDOM.render(<Alpha />, document.getElementById('root'))\n","import Modal from 'react-bootstrap/Modal';\nimport React, {useState} from 'react';\nimport Button from 'react-bootstrap/Button';\nimport './buttonFix.css';\nimport Payment from './payment';\n\n\nfunction Example(props) {\n    const [show, setShow] = useState(false);\n  \n    const handleClose = () => {\n        setShow(false);\n        console.log(\"It has closed\");\n    }\n\n    const handleYes = () => {\n        setShow(false);\n        console.log(\"Inside HandleYes!\");\n        const bookId = props.data.bookId;\n        const price = props.data.price;\n        // send the ether to owner \n        Payment.getAuthorAddress(bookId, price)\n\n        // Payment.sendEth('0x3ad7074068117c29f43C8F175D5C6f10D4632B73',20);\n        // Payment.getStatus(); \n    } \n\n    const handleShow = () => setShow(true);\n\n\n  \n    return (\n      <>\n        <Button className=\"button\" variant=\"primary\" onClick={handleShow}>\n        Buy for {props.data.price}\n        </Button>\n        {/* {props.data.name} */}\n        <Modal show={show} onHide={handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Confirm for the Book \"{props.data.name}\"</Modal.Title>\n          </Modal.Header>\n    <Modal.Body>Yes, I want to buy this book written by \"{props.data.By}\" for {props.data.price} &#x20B9;</Modal.Body>\n          <Modal.Footer>\n            <Button className=\"button\" variant=\"secondary\" onClick={handleClose}>\n              Cancel\n            </Button>\n            <Button className=\"button\"  variant=\"primary\" onClick={handleYes}>\n              Yes!\n            </Button>\n          </Modal.Footer>\n        </Modal>\n        </>\n    );\n  }\n  \n  export default Example;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 282;","import Web3 from 'web3'\n\nlet getWeb3 = new Promise(function(resolve, reject) {\n  // Wait for loading completion to avoid race conditions with web3 injection timing.\n  window.addEventListener('load', function() {\n    var results\n    var web3 = window.web3\n\n    // Checking if Web3 has been injected by the browser (Mist/MetaMask)\n    if (typeof web3 !== 'undefined') {\n      // Use Mist/MetaMask's provider.\n      web3 = new Web3(web3.currentProvider)\n\n      results = {\n        web3: web3\n      }\n      console.log(web3.version);\n      console.log('Injected web3 detected.');\n\n      resolve(results)\n    } else {\n      // Fallback to localhost if no web3 injection. We've configured this to\n      // use the development console's port by default.\n      var provider = new Web3.providers.HttpProvider('http://127.0.0.1:9545')\n\n      web3 = new Web3(provider)\n\n      results = {\n        web3: web3\n      }\n\n      console.log('No web3 instance injected, using Local web3.');\n\n      resolve(results)\n    }\n  })\n})\n\nexport default getWeb3\n","const IPFS = require('ipfs-api');\nconst ipfs = new IPFS({ host: 'ipfs.infura.io', port: 5001, protocol: 'https' });\n\nexport default ipfs;\n","import React, { Component } from 'react'\nimport web3Obj from './helper'\nimport Modal from './modal'\nimport getWeb3 from './utils/getWeb3'\nimport User from './contracts/User.json';\nimport Chainbooks from './contracts/Chainbooks.json';\n\n\nclass Payment extends Component {\n    constructor(props) {\n        super(props)\n        this.getUserInfo = this.getUserInfo.bind(this)\n        this.makePayment = this.makePayment.bind(this)\n        this.chainBooksInitialization = this.chainBooksInitialization.bind(this)\n        this.shareIpfs = this.shareIpfs.bind(this)\n        this.userInitialization = this.userInitialization.bind(this);\n    }\n\n\n\n    componentWillMount() {\n        console.log(\"Inside componentWillMount!\");\n        getWeb3.then(results => {\n            this.setState({ web3: web3Obj.web3 })\n            // Instantiate contract once web3 provided.\n            this.Initialize();\n            this.getUserInfo();\n        })\n            .catch(() => {\n                console.log('Error finding web3.')\n            })\n    }\n\n    Initialize() {\n        console.log(\"Inside Initialize\");\n        const userAbi = User.abi;\n        const userContractAddress = User.networks[3].address;\n        this.userInstance = new web3Obj.web3.eth.Contract(userAbi, userContractAddress);\n\n        const chainBooksAbi = Chainbooks.abi;\n        const chainBooksContractAddress = Chainbooks.networks[3].address;\n        this.chainBookInstance = new this.state.web3.eth.Contract(chainBooksAbi, chainBooksContractAddress);\n\n    }\n\n    userInitialization() {\n        const userAbi = User.abi;\n        const userContractAddress = User.networks[3].address;\n        this.userInstance = new web3Obj.web3.eth.Contract(userAbi, userContractAddress);\n    }\n\n    chainBooksInitialization() {\n        const chainBooksAbi = Chainbooks.abi;\n        const chainBooksContractAddress = Chainbooks.networks[3].address;\n        this.chainBookInstance = new web3Obj.web3.eth.Contract(chainBooksAbi, chainBooksContractAddress);\n    }\n\n    getAuthorAddress = async (bookid, price) => {\n        this.chainBooksInitialization();\n        console.log(\"Inside getAuthorAddress with id \" + bookid);\n        await web3Obj.web3.eth.getAccounts().then(async (accounts) => {\n            await this.chainBookInstance.methods.getAuthor(bookid).call({ from: accounts[0] })\n                .then((result) => {\n                    console.log(\"Author's address has been received!\");\n                    console.log(result);\n                    this.makePayment(price, result);\n                })\n        })\n    }\n\n    makePayment = async (price, address) => {\n        var eth = (price * 0.000061).toFixed(4);\n        console.log(\"Inside makePayment with Eth \" + eth);\n        await web3Obj.web3.eth.getAccounts().then(async (accounts) => {\n            await web3Obj.web3.eth.sendTransaction({ from: accounts[0], to: address, value: web3Obj.web3.utils.toWei(eth) })\n                .then((result) => {\n                    console.log(JSON.stringify(result));\n                    this.shareIpfs(address);\n                })\n        })\n    }\n\n    shareIpfs = async (address) => {\n        console.log(\"Inside shareIpfs!\");\n        await web3Obj.web3.eth.getAccounts().then(async (accounts) => {\n        await this.chainBookInstance.methods.getIpfs(address).call({ from: accounts[0] })\n            .then((result) => {\n                console.log(\"IPFS has been received!\");\n                console.log(result);\n                //    this.makePayment(price, result);\n                this.saveIpfsToUser(result[0]);\n            })\n        })\n    }\n\n    saveIpfsToUser = async (ipfs) => {\n        this.userInitialization();\n        console.log(\"Inside saveIpfsToUser!\");\n        await web3Obj.web3.eth.getAccounts().then(async (accounts) => {\n        await this.userInstance.methods.set(ipfs).send({ from: accounts[0] })\n            .then((result) => {\n                console.log(\"IPFS has been saved!\");\n                console.log(result);\n            })\n        })\n    }\n\n\n\n    getUserInfo = async () => {\n        const userInfo = await web3Obj.torus.getUserInfo()\n        console.log(\"userinfo: \");\n        console.log(userInfo);\n    }\n\n    sendEth = async (toaccount, value) => {\n\n        var receipt = await web3Obj.web3.eth.sendTransaction({ from: '0xa02cD3AFB5BA86996797AeDa780B6bF46fcCD43A', to: toaccount, value: web3Obj.web3.utils.toWei('0.01') })\n        alert(JSON.stringify(receipt));\n    }\n\n\n    getStatus = async () => {\n        console.log(\"insisde getStatus\");\n        var receipt = await web3Obj.web3.eth.getTransactionReceipt('0x24b0829cf1bc2724d85af24fe3d4da9be5b97021e340385de9aa80a046659a08');\n        alert(JSON.stringify(receipt));\n\n    }\n\n\n    render() {\n        return (\n            <div></div>\n        )\n    }\n\n}\nconst payment = new Payment();\nexport default payment;","import React, { Component } from 'react'\nimport SimpleStorageContract from './contracts/SimpleStorage.json'\nimport User from './contracts/User.json';\nimport getWeb3 from './utils/getWeb3'\nimport ipfsHelper from './ipfsHelper'\nimport web3Obj from './helper'\n\n\n// import './css/oswald.css'\n// import './css/open-sans.css'\n// import './css/pure-min.css'\nimport './ipfs.css'\n\nclass Ipfs extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      ipfsHash: '',\n      web3: null,\n      buffer: null,\n      account: null\n    }\n    this.captureFile = this.captureFile.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.UsergetContract = this.UsergetContract.bind(this);\n    this.UserContract = this.UserContract.bind(this);\n  }\n\n  componentWillMount() {\n    // Get network provider and web3 instance.\n    // See utils/getWeb3 for more info\n\n    getWeb3\n    .then(results => {\n      this.setState({\n        web3: web3Obj.web3\n        })\n\n      // Instantiate contract once web3 provided.\n      // this.instantiateContract()\n       this.Initialize();\n    })\n    .catch(() => {\n      console.log('Error finding web3.')\n    })\n  }\n\n  // this function is just to check the functionality \n  getUserInfo = async () => {\n    const userInfo = await web3Obj.torus.getUserInfo()\n\n    console.log(userInfo);\n  }\n\n\n  // testing the deployed user smart contract\n  instantiateContract() {\n    /*\n     * SMART CONTRACT EXAMPLE\n     *\n     * Normally these functions would be called in the context of a\n     * state management library, but for convenience I've placed them here.\n     */\n\n    const contract = require('truffle-contract')\n    const simpleStorage = contract(SimpleStorageContract)\n    simpleStorage.setProvider(this.state.web3.currentProvider)\n\n    // Get accounts.\n    // console.log(\"web version \"+ this.state.web3.version);\n    this.state.web3.eth.getAccounts((error, accounts) => {\n      simpleStorage.deployed().then((instance) => {\n        this.simpleStorageInstance = instance\n        this.setState({ account: accounts[0] })\n        // Get the value from the contract to prove it worked.\n        return this.simpleStorageInstance.get.call(accounts[0])\n      }).then((ipfsHash) => {\n        // Update state with the result.\n        return this.setState({ ipfsHash })\n      })\n    })\n  }\n\n  Initialize(){\n    const abi = User.abi;\n    const contractAddress = User.networks[3].address; \n    this.userInstance = new this.state.web3.eth.Contract(abi,contractAddress);\n    this.UserContract();\n  }\n\n  UserContract() {\n    this.state.web3.eth.getAccounts().then((e)=>{\n      console.log(\"e0 is \"+ e[0]);\n      this.userInstance.methods.set('testString3').send({from: e[0]}).then((r)=> {\n        console.log(r);      \n      })\n    })\n  }\n\n  UsergetContract(){\n    console.log(\"Getting called\");\n    this.userInstance.methods.get().call({from: '0xa02cd3afb5ba86996797aeda780b6bf46fccd43a'}).then((ipfsHash) => {\n      // Update state with the result.\n      console.log(\"inside 2\");\n     console.log(ipfsHash);\n    })\n  }\n\n  captureFile(event) {\n    event.preventDefault()\n    const file = event.target.files[0]\n    const reader = new window.FileReader()\n    reader.readAsArrayBuffer(file)\n    reader.onloadend = () => {\n      this.setState({ buffer: Buffer(reader.result) })\n      console.log('buffer', this.state.buffer)\n    }\n  }\n\n  onSubmit(event) {\n    event.preventDefault()\n    ipfsHelper.files.add(this.state.buffer, (error, result) => {\n      if(error) {\n        console.error(error)\n        return\n      }\n      this.simpleStorageInstance.set(result[0].hash, { from: this.state.account }).then((r) => {\n        console.log('ifpsHash', result[0].hash);\n        return  this.setState({ ipfsHash: result[0].hash })\n        \n      })\n    })\n  }\n\n  render() {\n    return (\n      \n      <div className=\"App\">\n        <nav className=\"navbar pure-menu pure-menu-horizontal\">\n          <a href=\"#\" className=\"pure-menu-heading pure-menu-link\">IPFS File Upload DApp</a>\n        </nav>\n        \n        <main className=\"container\">\n          <div className=\"pure-g\">\n            <div className=\"pure-u-1-1\">\n              <h1>Your Image</h1>\n              <p>This image is stored on IPFS & The Ethereum Blockchain!</p>\n              <img src={`https://ipfs.io/ipfs/${this.state.ipfsHash}`} alt=\"\"/>\n              <h2>Upload Image</h2>\n              <button onClick={this.UsergetContract}>Check</button>\n              <form onSubmit={this.onSubmit} >\n                <input type='file' onChange={this.captureFile} />\n                <input type='submit' />\n              </form>\n            </div>\n          </div>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default Ipfs\n","import Modal from 'react-bootstrap/Modal';\r\nimport React, { useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport './buttonFix.css';\r\nimport Payment from './payment';\r\nimport ipfsHelper from './ipfsHelper'\r\nimport Chainbooks from './contracts/Chainbooks.json';\r\nimport web3Obj from './helper'\r\n\r\nfunction Example() {\r\n    const [show, setShow] = useState(false);\r\n    const [secondShow, setSecondShow] = useState(false);\r\n\r\n    const handleClose = () => {\r\n        setShow(false);\r\n    }\r\n\r\n    const handleYes = () => {\r\n        setShow(false);\r\n    }\r\n\r\n    const handleShow = () => {\r\n        setShow(true);\r\n        initialize();\r\n    }\r\n\r\n    const handleSecondClose = () => {\r\n        setSecondShow(false);\r\n    }\r\n\r\n    const handleSecondYes = () => {\r\n        setSecondShow(false);\r\n    }\r\n\r\n    const handleSecondShow = () => {\r\n        setSecondShow(true);\r\n    }\r\n\r\n    const [buffer, setBuffer] = useState([]);\r\n    const [chainBookInstance, setChainBookInstance] = useState();\r\n    const [generatedHash, setGeneratedHash] = useState(null);\r\n    const [bookId, setBookId] = useState(0);\r\n   \r\n    const initialize = () => {\r\n        const chainBooksAbi = Chainbooks.abi;\r\n        const chainBooksContractAddress = Chainbooks.networks[3].address;\r\n        setChainBookInstance(new web3Obj.web3.eth.Contract(chainBooksAbi, chainBooksContractAddress))\r\n\r\n    }\r\n\r\n    const captureFile = (event) => {\r\n        event.preventDefault()\r\n        const file = event.target.files[0]\r\n        const reader = new window.FileReader()\r\n        reader.readAsArrayBuffer(file)\r\n        reader.onloadend = () => {\r\n            setBuffer(Buffer(reader.result))\r\n        }\r\n        \r\n    }\r\n\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault()\r\n       await ipfsHelper.files.add(buffer, async (error, result) => {\r\n            if (error) {\r\n                console.error(error)\r\n                return\r\n            }\r\n\r\n            setGeneratedHash(result[0].hash);\r\n            const hash = result[0].hash;\r\n            console.log(\"hash is \"+ result[0].hash);\r\n            console.log(buffer);\r\n            console.log(chainBookInstance);\r\n            await web3Obj.web3.eth.getAccounts().then(async (accounts) => {\r\n                await chainBookInstance.methods.getBookId().call({ from: accounts[0] })\r\n                    .then((result) => {\r\n                        console.log(\"Book Number has been received!\" + result[0]);          \r\n                        setBookId(result[0])\r\n                        showLoading(hash);\r\n                    })\r\n            })\r\n        })\r\n    }\r\n\r\n    const showLoading = (hash) => {\r\n        handleYes();\r\n        handleSecondShow();\r\n        console.log(\"Inside Showloading where hash is \" + hash + \" book id is \"+bookId);\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Button className=\"button\" variant=\"primary\" onClick={handleShow}>\r\n                Buy for\r\n            </Button>\r\n            {/* {props.data.name} */}\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Confirm for the Book </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div>\r\n                        <main className=\"container\">\r\n                            <div className=\"pure-g\">\r\n                                <div className=\"pure-u-1-1\">\r\n                                    <h1>Your Image</h1>\r\n                                    <p>This image is stored on IPFS & The Ethereum Blockchain!</p>\r\n                                    <form onSubmit={onSubmit} >\r\n                                        <input type='file' onChange={captureFile} /> <br />\r\n                                        <h3>Book Name</h3>  <br />\r\n                                        <input type='text' placeholder='Book Name' /> <br />\r\n                                        <h3>Author Name</h3> <br />\r\n                                        <input type=\"text\" placeholder='Author Name' /> <br />\r\n                                        <input type='submit' />\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </main>\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button className=\"button\" variant=\"secondary\" onClick={handleClose}>\r\n                        Cancel\r\n            </Button>\r\n                    <Button className=\"button\" variant=\"primary\" onClick={handleYes}>\r\n                        Yes!\r\n            </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n            <Modal show={secondShow} onHide={handleSecondClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>second </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    second\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button className=\"button\" variant=\"secondary\" onClick={handleSecondClose}>\r\n                        Cancel\r\n            </Button>\r\n                    <Button className=\"button\" variant=\"primary\" onClick={handleSecondYes}>\r\n                        Yes!\r\n            </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Example;\r\n\r\n\r\n"],"sourceRoot":""}